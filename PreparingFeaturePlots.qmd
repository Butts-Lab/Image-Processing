---
title: "FeaturePlot_ImageProcessing"
author: "Madison McLaren"
format: html
editor: visual
---

# Feature Plots for Image Processing

The following code is used to generate gene expression plots using the FeaturePlot function of Seurat. These plots will then be exported as JPEG images and used to make calculations in a separate MATLAB script.

edit

### Load in Necessary Libraries and Dataset

```{r loading_libraries, echo = FALSE, message = FALSE}
library(Seurat)
library(tidyverse)
library(scales)
```

```{r loading_dataset}
load("C:/Users/mclrm/OneDrive/Documents/R/ButtsLab/Prog_and_Intermediate_subset.Rdata")
```

```{r updating_dataset, echo = FALSE, message = FALSE}
ProInt_subsetupdated = UpdateSeuratObject(object = Prog_and_Intermediate_subset)
```

### Running Dimensionality Reduction

```{r dim_red, echo = FALSE, message = FALSE}
VarFeats <- FindVariableFeatures(ProInt_subsetupdated, selection.method = "vst", nfeatures = 2000, verbose = FALSE)

# Scale data based on variable features
all.genes <- rownames(VarFeats)
Scaled <- ScaleData(VarFeats, features = all.genes, verbose = FALSE)

# Perform principal component analysis
PCA <- RunPCA(Scaled, features = VariableFeatures(object = Scaled), verbose = FALSE)

# Find neighboring cells
Neighbors <- FindNeighbors(PCA, dims = 1:10)

# Generate Clusters
Clusters <- FindClusters(Neighbors, resolution = 0.5)

# Visualize clusters by time point
UMAP <- RunUMAP(Clusters, dims = 1:10, verbose = F)
```

### Generate Feature Plots

```{r create_featureplot, echo = FALSE}
# Input the names of the genes you are interested in coexpressing here
Genes <- c("Clec2l","Car4")

# Generate Feature Plots
Gene1_Exp <- FeaturePlot(UMAP, features = Genes[1], pt.size=0.1) + xlim(-10,15) + ylim(-10,10) + theme(legend.position = "none")
Gene2_Exp <- FeaturePlot(UMAP, features = Genes[2], pt.size=0.1) + xlim(-10,15) + ylim(-10,10) + theme(legend.position = "none")
```

```{r generate_genelist}
filter_gene_names <- function(object, str_match_list) {
        gene_names <- Features(object)
        genes <- c()
        for(i in str_match_list){
                gene_matches <- grep(i, gene_names, value = TRUE)
                genes <- c(genes, gene_matches)
        }
        return(genes)
}

keygenes <- c("Atoh1", "WPRE", "Mki67", "Sox2", "Nhlh2", "Mapt", "Nes", "Pax6")
moregenes <- filter_gene_names(UMAP, c("Notch", "Dll", "Jag", "Hes", "Nrarp", "Wnt"))

genes <- c(keygenes, moregenes)
```

```{r create_FeaturePlots}
create_FP <- function(object, genes){
        Plots <- list()
        for(i in genes){
                Plots[[i]] <- FeaturePlot(object, features = genes[1], 
                                          pt.size=0.1) +
                        xlim(-10,15) + ylim(-10,10) + 
                        theme(legend.position = "none")
        }
        return(Plots)
}

Plots <- create_FP(UMAP, genes)
```

```{r create_UMAP_annotations}
UMAP_Clusters <- DimPlot(object = UMAP, reduction = "umap", pt.size=0.1) + 
        xlim(-10,15) + ylim(-10,10) + 
        theme(legend.position = "none")

UMAP_Celltype <- DimPlot(object = UMAP, reduction = "umap", pt.size=0.1, 
        group.by = "celltype") + 
        xlim(-10,15) + ylim(-10,10) + 
        theme(legend.position = "none")

Plots <- append(Plots, UMAP_Clusters)
Plots <- append(Plots, UMAP_Celltype)
```

```{r specify_cluster, echo = FALSE, message = FALSE}
# Extract UMAP coordinates from the UMAP object
umap_coords <- as.data.frame(UMAP@reductions$umap@cell.embeddings)

# Add cluster information to the data frame
umap_coords$Cluster <- as.factor(Clusters$seurat_clusters)

# Highlighted cluster
highlighted_cluster <- 0  # Change this to the cluster you want to highlight

# Create UMAP plot using ggplot2
UMAP_highlight <- ggplot(umap_coords, aes(x = umap_coords[, 1], y = umap_coords[, 2])) +
        geom_point(aes(color = ifelse(Cluster == highlighted_cluster, "Highlighted", "Other")), 
                   size = 0.1) +
        scale_color_manual(values = c("red", "grey"), 
                           name = "Clusters", 
                           labels = c("Other Clusters", paste("Cluster", highlighted_cluster))) +
        xlim(-10,15) + ylim(-10,10) + 
        theme(legend.position = "none")
        theme_minimal()
        
UMAP_highlight
```

### Save FeaturePlots to Folder

Please note that the naming of these files should be named as: File1 = Gene1_Exp File2 = Gene2_Exp Where Gene1 and Gene2 are substituted for your two genes of interest. Files will be saved to your current directory.

**Please do not change anything about the file saving format**

```{r saving_files}
# Create file names
gene1_filename <- paste(Genes[1], "_Exp.jpeg", sep = "")
gene2_filename <- paste(Genes[2], "_Exp.jpeg", sep = "")
cluster_filename <- paste(highlighted_cluster, "_Exp.jpeg", sep = "")

# Save to file directory as jpeg images
ggsave(gene1_filename, plot = Gene1_Exp, device = "jpeg", width = 1494, height = 708, units = "px", dpi = 96)
ggsave(gene2_filename, plot = Gene2_Exp, device = "jpeg", width = 1494, height = 708, units = "px", dpi = 96)
ggsave(cluster_filename, plot = UMAP_highlight, device = "jpeg", width = 1494, height = 708, units = "px", dpi = 96)
```

```{r save_files_func}
filesave <- function(Genes, Plots){
        for(i in Genes){
                filename <- paste(Genes[i], "_Exp.jpeg", sep = "",
                                  path = "FeaturePlots")
                ggsave(filename, plot = Plots[[i]], 
                       device = "jpeg", width = 1494, height = 708,
                       units = "px", dpi = 96)
        }
}

filesave(genes, Plots)
```
